version: '2.4'
services:
  mysql-standalone:
    image: mysql:latest
    container_name: mysql-standalone
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=employeedb
    ports:
      - 3310:3306
    volumes:
      - deepikabVolume: /var/lib/mysql
          
    networks:
      - deepikabNetwork 
    healthcheck:      
      test: ["CMD", "mysqladmin", "ping", "-h", "mysql-standalone"]  # Or use the hostname of your MySQL container      
      interval: 10s      
      timeout: 10s      
      retries: 3  



  springboot-docker-container:
    image: 172.27.59.80:8082/deepika-gitlab-pipeline/docker-pipeline-springapp
    container_name: springboot-docker-container
    ports:
      - 8083:8080
    #command: ["sh", "-c", "while ! nc -z mysql-standalone 3306; do sleep 1; done && java -jar app.jar"]
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-standalone:3306/employeedb?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASS=root
   # build:
     # context: ./springboot-backend/
     # dockerfile: Dockerfile
    depends_on:
      mysql-standalone:
        condition: service_healthy
    networks:
      - deepikabNetwork 




  angular-docker-container:
    image: 172.27.59.80:8082/deepika-gitlab-pipeline/docker-pipeline1-angularapp
    container_name: angular-docker-container
    ports:
      - 4200:80
    #build:
     # context: ./angular-app/app/
     # dockerfile: Dockerfile
    depends_on:
      - springboot-docker-container
    networks:
      - deepikabNetwork 


networks:
  deepikabNetwork:    


volumes:
   deepikabVolume: 
